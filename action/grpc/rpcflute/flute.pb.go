// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: flute.proto

package rpcflute

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	rpcmsgType "hcc/flute/action/grpc/rpcmsgType"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Symbols defined in public import of msgType.proto.

type VNC_VNCAction = rpcmsgType.VNC_VNCAction

const VNC_CREATE = rpcmsgType.VNC_CREATE
const VNC_DELETE = rpcmsgType.VNC_DELETE

var VNC_VNCAction_name = rpcmsgType.VNC_VNCAction_name
var VNC_VNCAction_value = rpcmsgType.VNC_VNCAction_value

type Node = rpcmsgType.Node
type NodeDetail = rpcmsgType.NodeDetail
type Server = rpcmsgType.Server
type ServerNode = rpcmsgType.ServerNode
type VNC = rpcmsgType.VNC
type Volume = rpcmsgType.Volume
type VolumeAttachment = rpcmsgType.VolumeAttachment
type Ipmi = rpcmsgType.Ipmi
type AdaptiveIP = rpcmsgType.AdaptiveIP
type AdaptiveIPServer = rpcmsgType.AdaptiveIPServer
type Subnet = rpcmsgType.Subnet
type Series = rpcmsgType.Series
type Telegraf = rpcmsgType.Telegraf
type Control = rpcmsgType.Control
type Quota = rpcmsgType.Quota

type ReqOnOffNode_PowerState int32

const (
	ReqOnOffNode_ON      ReqOnOffNode_PowerState = 0
	ReqOnOffNode_OFF     ReqOnOffNode_PowerState = 1
	ReqOnOffNode_RESTART ReqOnOffNode_PowerState = 2
)

// Enum value maps for ReqOnOffNode_PowerState.
var (
	ReqOnOffNode_PowerState_name = map[int32]string{
		0: "ON",
		1: "OFF",
		2: "RESTART",
	}
	ReqOnOffNode_PowerState_value = map[string]int32{
		"ON":      0,
		"OFF":     1,
		"RESTART": 2,
	}
)

func (x ReqOnOffNode_PowerState) Enum() *ReqOnOffNode_PowerState {
	p := new(ReqOnOffNode_PowerState)
	*p = x
	return p
}

func (x ReqOnOffNode_PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqOnOffNode_PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_flute_proto_enumTypes[0].Descriptor()
}

func (ReqOnOffNode_PowerState) Type() protoreflect.EnumType {
	return &file_flute_proto_enumTypes[0]
}

func (x ReqOnOffNode_PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqOnOffNode_PowerState.Descriptor instead.
func (ReqOnOffNode_PowerState) EnumDescriptor() ([]byte, []int) {
	return file_flute_proto_rawDescGZIP(), []int{0, 0}
}

type ReqOnOffNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes      []*rpcmsgType.Node      `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	PowerState ReqOnOffNode_PowerState `protobuf:"varint,2,opt,name=power_state,json=powerState,proto3,enum=RpcFlute.ReqOnOffNode_PowerState" json:"power_state,omitempty"`
}

func (x *ReqOnOffNode) Reset() {
	*x = ReqOnOffNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOnOffNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOnOffNode) ProtoMessage() {}

func (x *ReqOnOffNode) ProtoReflect() protoreflect.Message {
	mi := &file_flute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOnOffNode.ProtoReflect.Descriptor instead.
func (*ReqOnOffNode) Descriptor() ([]byte, []int) {
	return file_flute_proto_rawDescGZIP(), []int{0}
}

func (x *ReqOnOffNode) GetNodes() []*rpcmsgType.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ReqOnOffNode) GetPowerState() ReqOnOffNode_PowerState {
	if x != nil {
		return x.PowerState
	}
	return ReqOnOffNode_ON
}

type ResOnOffNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*rpcmsgType.Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ResOnOffNode) Reset() {
	*x = ResOnOffNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResOnOffNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResOnOffNode) ProtoMessage() {}

func (x *ResOnOffNode) ProtoReflect() protoreflect.Message {
	mi := &file_flute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResOnOffNode.ProtoReflect.Descriptor instead.
func (*ResOnOffNode) Descriptor() ([]byte, []int) {
	return file_flute_proto_rawDescGZIP(), []int{1}
}

func (x *ResOnOffNode) GetNodes() []*rpcmsgType.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ReqFlute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*rpcmsgType.Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ReqFlute) Reset() {
	*x = ReqFlute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFlute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFlute) ProtoMessage() {}

func (x *ReqFlute) ProtoReflect() protoreflect.Message {
	mi := &file_flute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFlute.ProtoReflect.Descriptor instead.
func (*ReqFlute) Descriptor() ([]byte, []int) {
	return file_flute_proto_rawDescGZIP(), []int{2}
}

func (x *ReqFlute) GetNodes() []*rpcmsgType.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ResFlute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*rpcmsgType.Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ResFlute) Reset() {
	*x = ResFlute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFlute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFlute) ProtoMessage() {}

func (x *ResFlute) ProtoReflect() protoreflect.Message {
	mi := &file_flute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFlute.ProtoReflect.Descriptor instead.
func (*ResFlute) Descriptor() ([]byte, []int) {
	return file_flute_proto_rawDescGZIP(), []int{3}
}

func (x *ResFlute) GetNodes() []*rpcmsgType.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_flute_proto protoreflect.FileDescriptor

var file_flute_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x6c, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x52,
	0x70, 0x63, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x1a, 0x0d, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4f, 0x6e,
	0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0b,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x52, 0x70, 0x63, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x2a, 0x0a, 0x0a, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x02, 0x22, 0x33, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x2f, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x2f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x32, 0x7e, 0x0a, 0x05, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x52, 0x70, 0x63, 0x46,
	0x6c, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64,
	0x65, 0x1a, 0x16, 0x2e, 0x52, 0x70, 0x63, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x2e, 0x52, 0x70, 0x63, 0x46,
	0x6c, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x1a, 0x12, 0x2e,
	0x52, 0x70, 0x63, 0x46, 0x6c, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x46, 0x6c, 0x75, 0x74,
	0x65, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x68, 0x63, 0x63, 0x2f, 0x66, 0x6c, 0x75, 0x74, 0x65,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63,
	0x66, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flute_proto_rawDescOnce sync.Once
	file_flute_proto_rawDescData = file_flute_proto_rawDesc
)

func file_flute_proto_rawDescGZIP() []byte {
	file_flute_proto_rawDescOnce.Do(func() {
		file_flute_proto_rawDescData = protoimpl.X.CompressGZIP(file_flute_proto_rawDescData)
	})
	return file_flute_proto_rawDescData
}

var file_flute_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flute_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_flute_proto_goTypes = []interface{}{
	(ReqOnOffNode_PowerState)(0), // 0: RpcFlute.ReqOnOffNode.PowerState
	(*ReqOnOffNode)(nil),         // 1: RpcFlute.ReqOnOffNode
	(*ResOnOffNode)(nil),         // 2: RpcFlute.ResOnOffNode
	(*ReqFlute)(nil),             // 3: RpcFlute.ReqFlute
	(*ResFlute)(nil),             // 4: RpcFlute.ResFlute
	(*rpcmsgType.Node)(nil),      // 5: MsgType.Node
}
var file_flute_proto_depIdxs = []int32{
	5, // 0: RpcFlute.ReqOnOffNode.nodes:type_name -> MsgType.Node
	0, // 1: RpcFlute.ReqOnOffNode.power_state:type_name -> RpcFlute.ReqOnOffNode.PowerState
	5, // 2: RpcFlute.ResOnOffNode.nodes:type_name -> MsgType.Node
	5, // 3: RpcFlute.ReqFlute.nodes:type_name -> MsgType.Node
	5, // 4: RpcFlute.ResFlute.nodes:type_name -> MsgType.Node
	1, // 5: RpcFlute.Flute.OnOffNode:input_type -> RpcFlute.ReqOnOffNode
	3, // 6: RpcFlute.Flute.CreateNode:input_type -> RpcFlute.ReqFlute
	2, // 7: RpcFlute.Flute.OnOffNode:output_type -> RpcFlute.ResOnOffNode
	4, // 8: RpcFlute.Flute.CreateNode:output_type -> RpcFlute.ResFlute
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_flute_proto_init() }
func file_flute_proto_init() {
	if File_flute_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOnOffNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResOnOffNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFlute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFlute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flute_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flute_proto_goTypes,
		DependencyIndexes: file_flute_proto_depIdxs,
		EnumInfos:         file_flute_proto_enumTypes,
		MessageInfos:      file_flute_proto_msgTypes,
	}.Build()
	File_flute_proto = out.File
	file_flute_proto_rawDesc = nil
	file_flute_proto_goTypes = nil
	file_flute_proto_depIdxs = nil
}
