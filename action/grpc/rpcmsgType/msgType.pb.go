// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: msgType.proto

package rpcmsgType

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VNC_VNCAction int32

const (
	VNC_CREATE VNC_VNCAction = 0
	VNC_DELETE VNC_VNCAction = 1
)

// Enum value maps for VNC_VNCAction.
var (
	VNC_VNCAction_name = map[int32]string{
		0: "CREATE",
		1: "DELETE",
	}
	VNC_VNCAction_value = map[string]int32{
		"CREATE": 0,
		"DELETE": 1,
	}
)

func (x VNC_VNCAction) Enum() *VNC_VNCAction {
	p := new(VNC_VNCAction)
	*p = x
	return p
}

func (x VNC_VNCAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VNC_VNCAction) Descriptor() protoreflect.EnumDescriptor {
	return file_msgType_proto_enumTypes[0].Descriptor()
}

func (VNC_VNCAction) Type() protoreflect.EnumType {
	return &file_msgType_proto_enumTypes[0]
}

func (x VNC_VNCAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VNC_VNCAction.Descriptor instead.
func (VNC_VNCAction) EnumDescriptor() ([]byte, []int) {
	return file_msgType_proto_rawDescGZIP(), []int{2, 0}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BmcMacAddr  string               `protobuf:"bytes,2,opt,name=bmc_mac_addr,json=bmcMacAddr,proto3" json:"bmc_mac_addr,omitempty"`
	BmcIp       string               `protobuf:"bytes,3,opt,name=bmc_ip,json=bmcIp,proto3" json:"bmc_ip,omitempty"`
	PxeMacAddr  string               `protobuf:"bytes,4,opt,name=pxe_mac_addr,json=pxeMacAddr,proto3" json:"pxe_mac_addr,omitempty"`
	Status      string               `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Description string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CpuCores    int32                `protobuf:"varint,7,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	Memory      int32                `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	Active      int32                `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	CreateAt    *timestamp.Timestamp `protobuf:"bytes,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	ForceOff    bool                 `protobuf:"varint,11,opt,name=force_off,json=forceOff,proto3" json:"force_off,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgType_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_msgType_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_msgType_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Node) GetBmcMacAddr() string {
	if x != nil {
		return x.BmcMacAddr
	}
	return ""
}

func (x *Node) GetBmcIp() string {
	if x != nil {
		return x.BmcIp
	}
	return ""
}

func (x *Node) GetPxeMacAddr() string {
	if x != nil {
		return x.PxeMacAddr
	}
	return ""
}

func (x *Node) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Node) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Node) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *Node) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Node) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *Node) GetCreateAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreateAt
	}
	return nil
}

func (x *Node) GetForceOff() bool {
	if x != nil {
		return x.ForceOff
	}
	return false
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SubnetUuid string               `protobuf:"bytes,2,opt,name=subnet_uuid,json=subnetUuid,proto3" json:"subnet_uuid,omitempty"`
	Os         string               `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	ServerName string               `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerDesc string               `protobuf:"bytes,5,opt,name=server_desc,json=serverDesc,proto3" json:"server_desc,omitempty"`
	Cpu        int32                `protobuf:"varint,6,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory     int32                `protobuf:"varint,7,opt,name=memory,proto3" json:"memory,omitempty"`
	DiskSize   int32                `protobuf:"varint,8,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	Status     string               `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	UserUuid   string               `protobuf:"bytes,10,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	CreateAt   *timestamp.Timestamp `protobuf:"bytes,11,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgType_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_msgType_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_msgType_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Server) GetSubnetUuid() string {
	if x != nil {
		return x.SubnetUuid
	}
	return ""
}

func (x *Server) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Server) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Server) GetServerDesc() string {
	if x != nil {
		return x.ServerDesc
	}
	return ""
}

func (x *Server) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Server) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Server) GetDiskSize() int32 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *Server) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Server) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *Server) GetCreateAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreateAt
	}
	return nil
}

type VNC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string        `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ServerUuid string        `protobuf:"bytes,2,opt,name=server_uuid,json=serverUuid,proto3" json:"server_uuid,omitempty"`
	Action     VNC_VNCAction `protobuf:"varint,3,opt,name=action,proto3,enum=MsgType.VNC_VNCAction" json:"action,omitempty"`
}

func (x *VNC) Reset() {
	*x = VNC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgType_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VNC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VNC) ProtoMessage() {}

func (x *VNC) ProtoReflect() protoreflect.Message {
	mi := &file_msgType_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VNC.ProtoReflect.Descriptor instead.
func (*VNC) Descriptor() ([]byte, []int) {
	return file_msgType_proto_rawDescGZIP(), []int{2}
}

func (x *VNC) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VNC) GetServerUuid() string {
	if x != nil {
		return x.ServerUuid
	}
	return ""
}

func (x *VNC) GetAction() VNC_VNCAction {
	if x != nil {
		return x.Action
	}
	return VNC_CREATE
}

type ServerNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ServerUuid string               `protobuf:"bytes,2,opt,name=server_uuid,json=serverUuid,proto3" json:"server_uuid,omitempty"`
	NodeUuid   string               `protobuf:"bytes,3,opt,name=node_uuid,json=nodeUuid,proto3" json:"node_uuid,omitempty"`
	CreateAt   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *ServerNode) Reset() {
	*x = ServerNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgType_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNode) ProtoMessage() {}

func (x *ServerNode) ProtoReflect() protoreflect.Message {
	mi := &file_msgType_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNode.ProtoReflect.Descriptor instead.
func (*ServerNode) Descriptor() ([]byte, []int) {
	return file_msgType_proto_rawDescGZIP(), []int{3}
}

func (x *ServerNode) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ServerNode) GetServerUuid() string {
	if x != nil {
		return x.ServerUuid
	}
	return ""
}

func (x *ServerNode) GetNodeUuid() string {
	if x != nil {
		return x.NodeUuid
	}
	return ""
}

func (x *ServerNode) GetCreateAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreateAt
	}
	return nil
}

var File_msgType_proto protoreflect.FileDescriptor

var file_msgType_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x02, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6d, 0x63, 0x5f, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6d,
	0x63, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6d, 0x63, 0x5f,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6d, 0x63, 0x49, 0x70, 0x12,
	0x20, 0x0a, 0x0c, 0x70, 0x78, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x78, 0x65, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x22, 0xc4,
	0x02, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x43, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x4e, 0x43, 0x2e, 0x56, 0x4e, 0x43, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a,
	0x09, 0x56, 0x4e, 0x43, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x42, 0x22, 0x5a, 0x20,
	0x68, 0x63, 0x63, 0x2f, 0x66, 0x6c, 0x75, 0x74, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msgType_proto_rawDescOnce sync.Once
	file_msgType_proto_rawDescData = file_msgType_proto_rawDesc
)

func file_msgType_proto_rawDescGZIP() []byte {
	file_msgType_proto_rawDescOnce.Do(func() {
		file_msgType_proto_rawDescData = protoimpl.X.CompressGZIP(file_msgType_proto_rawDescData)
	})
	return file_msgType_proto_rawDescData
}

var file_msgType_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msgType_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_msgType_proto_goTypes = []interface{}{
	(VNC_VNCAction)(0),          // 0: MsgType.VNC.VNCAction
	(*Node)(nil),                // 1: MsgType.Node
	(*Server)(nil),              // 2: MsgType.Server
	(*VNC)(nil),                 // 3: MsgType.VNC
	(*ServerNode)(nil),          // 4: MsgType.ServerNode
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_msgType_proto_depIdxs = []int32{
	5, // 0: MsgType.Node.create_at:type_name -> google.protobuf.Timestamp
	5, // 1: MsgType.Server.create_at:type_name -> google.protobuf.Timestamp
	0, // 2: MsgType.VNC.action:type_name -> MsgType.VNC.VNCAction
	5, // 3: MsgType.ServerNode.create_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_msgType_proto_init() }
func file_msgType_proto_init() {
	if File_msgType_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msgType_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgType_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgType_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VNC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgType_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msgType_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msgType_proto_goTypes,
		DependencyIndexes: file_msgType_proto_depIdxs,
		EnumInfos:         file_msgType_proto_enumTypes,
		MessageInfos:      file_msgType_proto_msgTypes,
	}.Build()
	File_msgType_proto = out.File
	file_msgType_proto_rawDesc = nil
	file_msgType_proto_goTypes = nil
	file_msgType_proto_depIdxs = nil
}
